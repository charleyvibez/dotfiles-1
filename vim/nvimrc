"set encoding=utf-8
let $NODE_ENV="test"
let test#strategy = "neovim"

set nocp
set backspace=indent,eol,start
set nocompatible              " be iMproved, required
let mapleader=","
set clipboard=unnamed
" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

syntax on
"set nowrap       "Don't wrap lines
"set linebreak    "Wrap lines at convenient points
" set tab as 4 spaces
" set background=dark
set textwidth=80
set diffopt+=vertical
" set colorcolumn=80
" set number
set relativenumber
set smarttab
set mouse=a
" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" set the runtime path to include Vundle and initialize
filetype off                  " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree.git'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/emmet-vim'
Plugin 'Raimondi/delimitMate'
Plugin 'Shougo/deoplete.nvim'
Plugin 'janko-m/vim-test'
Plugin 'airblade/vim-gitgutter'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'tpope/vim-fugitive'
Plugin 'elixir-lang/vim-elixir'
Plugin 'mileszs/ack.vim'
Plugin 'heavenshell/vim-jsdoc'
Plugin 'flazz/vim-colorschemes'
Plugin 'bling/vim-airline'
Plugin 'pangloss/vim-javascript'
Plugin 'gcorne/vim-sass-lint'
Plugin 'mxw/vim-jsx'
Plugin 'fatih/vim-go'
Plugin 'captbaritone/better-indent-support-for-php-with-html'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'StanAngeloff/php.vim'
Plugin 'shawncplus/phpcomplete.vim'
Plugin 'haishanh/night-owl.vim'
Plugin 'mhartington/oceanic-next'
Plugin 'rakr/vim-one'
Plugin 'morhetz/gruvbox'
Plugin 'isRuslan/vim-es6'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'dracula/vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required

" Ignoring files
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux

" Ctrl-P Settings
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|.git|tmp\|_build\|deps'
let g:ctrlp_show_hidden = 1

" Syntastic Settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'eslint .'
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_scss_checkers=["sass_lint"]
let g:syntastic_go_checkers = ['go', 'golint', 'errcheck']
" Airline Settings
let g:airline#extensions#syntastic#enabled = 1

" Miscellaneous
syntax on

filetype plugin indent on    " required
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

syntax on

set regexpengine=1
syntax enable

" colors & themes
set t_Co=256
if (has("termguicolors"))
 set termguicolors
endif
set background=dark
let g:oceanic_next_terminal_bold = 1
let g:oceanic_next_terminal_italic = 1
" let g:airline_theme='dracula'
" colorscheme dracula

let g:tagbar_ctags_bin='/usr/local/bin/ctags'
let javascript_enable_domhtmlcss=1
let g:jsx_ext_required = 0
let g:gitgutter_override_sign_column_highlight = 0

" Remapping
nmap <F1> :NERDTreeToggle<CR>
" Disable arrow keys => yeah let's get bad ass with vim :D
nnoremap <Up> :echomsg "use k idiot!!!"<cr>
nnoremap <Down> :echomsg "use j idiot!!!"<cr>
nnoremap <Left> :echomsg "use h idiot!!!"<cr>
nnoremap <Right> :echomsg "use l idiot!!!"<cr>

" Remap common key patterns to Mac OSX
inoremap <leader>s <Esc>:w<CR>i
nnoremap <leader>s :w<CR>

let g:syntastic_filetype_map = { 
      \ "html.handlebars": "handlebars",
      \ "handlebars.html": "handlebars"
      \ }

" Golang specific configs
"
" Code highlighting...
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_highlight_structs = 1
let g:go_highlight_extra_types = 1
let g:go_auto_sameids = 1
let g:go_auto_type_info = 1
let g:go_addtags_transform = "snakecase"

let g:syntastic_go_checkers = ['golint', 'govet', 'errcheck']
let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['go'] }
let g:go_list_type = "quickfix"

au FileType go set noexpandtab
au FileType go set shiftwidth=2
au FileType go set softtabstop=2
au FileType go set tabstop=2
" autocmd BufWritePre *.go call go#lint#Run()

let g:deoplete#enable_at_startup = 1

" Keymaps for Go Code
au FileType go nmap <leader><SPACE> :GoDeclsDir<cr>
au Filetype go nmap <leader>ga <Plug>(go-alternate-edit)
au Filetype go nmap <leader>gah <Plug>(go-alternate-split)
au Filetype go nmap <leader>gav <Plug>(go-alternate-vertical)
au FileType go nmap <F10> :GoTest -short<cr>
au FileType go nmap <F9> :GoCoverageToggle -short<cr>
au FileType go nmap <F12> <Plug>(go-def)

" PHP settings
" save ctags to git hooks on file save
" au BufWritePost *.php silent! !eval '[ -f ".git/hooks/ctags" ] && .git/hooks/ctags'
au BufWritePost *.php silent! !php -l %
let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']
let g:phpcomplete_mappings = {
   \ 'jump_to_def': '<C-]>',
   \ 'jump_to_def_split': '<C-W><C-]>',
   \ 'jump_to_def_vsplit': '<C-W><C-\>',
   \ 'jump_to_def_tabnew': '<C-W><C-[>',
   \}

au FileType php nmap <F2> gg=G<cr>

" Indent Guides
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2

